CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

IF(DEFINED CMAKE_BUILD_TYPE)
  SET(CMAKE_BUILD_TYPE ${CMAKE_BUILD_TYPE} CACHE STRING "Choose the type of build, options are: None(CMAKE_CXX_FLAGS or CMAKE_C_FLAGS used) Debug Release RelWithDebInfo MinSizeRel.")
ELSE()
  SET(CMAKE_BUILD_TYPE RelWithDebInfo CACHE STRING "Choose the type of build, options are: None(CMAKE_CXX_FLAGS or CMAKE_C_FLAGS used) Debug Release RelWithDebInfo MinSizeRel.")
ENDIF()

INCLUDE (CheckIncludeFileCXX)
INCLUDE (CMakeDependentOption)

PROJECT(Vertigo)

SET(CMAKE_MODULE_PATH
    ${CMAKE_CURRENT_SOURCE_DIR}/CMake
    ${CMAKE_CURRENT_SOURCE_DIR}/CMake/Packages
    ${CMAKE_MODULE_PATH})

ADD_DEFINITIONS("-std=c++0x")

SET(Boost_USE_MULTITHREAD ON)

FIND_PACKAGE(Boost 1.46 COMPONENTS filesystem thread system date_time REQUIRED)
FIND_PACKAGE(log4cpp REQUIRED)
FIND_PACKAGE(Lua51 REQUIRED)
FIND_PACKAGE(OGRE REQUIRED)
FIND_PACKAGE(OIS REQUIRED)
FIND_PACKAGE(CEGUI 0.7 REQUIRED)
FIND_PACKAGE(toluapp REQUIRED)
FIND_PACKAGE(YAJL REQUIRED)
FIND_PACKAGE(CURL REQUIRED)

# project version
SET( ${PROJECT_NAME}_VERSION_MAJOR 0 )
SET( ${PROJECT_NAME}_VERSION_MINOR 1 )
SET( ${PROJECT_NAME}_VERSION_PATCH 0 )

INCLUDE_DIRECTORIES(
  include
  include/Hax
  ${Boost_INCLUDE_DIRS}
  ${LOG4CPP_INCLUDE_DIR}
  ${LUA_INCLUDE_DIR}
  ${TOLUAPP_INCLUDE_DIR}
  ${ESHARED_INCLUDE_DIRS}
  ${OGRE_INCLUDE_DIRS}
  ${OIS_INCLUDE_DIRS}
  ${CEGUI_INCLUDE_DIR}
  ${YAJL_INCLUDE_DIRS}
  /usr/local/include)

SET(EXECUTABLE_OUTPUT_PATH "${CMAKE_CURRENT_SOURCE_DIR}/bin")
SET(LIBRARY_OUTPUT_PATH "${CMAKE_CURRENT_SOURCE_DIR}/lib")

ADD_SUBDIRECTORY(src)